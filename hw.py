import networkx as nx
import matplotlib.pyplot as plt

metro_graph = nx.Graph()

stations = [
    "Холодна гора", "Південний вокзал", "Центральний ринок",
    "Радянська", "Проспект Гагаріна", "Спортивна", "Завод ім. Малишева",
    "Московський проспект", "Маршала Жукова", "Радянської Армії", "Імені О. С. Масельського",
    "Тракторний завод", "Пролетарська", "Історичний музей", "Університет",
    "Пушкінська", "Київська", "Академіка Барабашова", "Академіка Павлова", "Студентська",
    "Героїв праці", "Метробудівників ім. Ващенка", "Площа Повстання",
    "Архітектора Бекетова", "Держпром", "Наукова", "Ботанічний сад", "23 Серпня", "Олексіївська"
]

edges = [
    ("Холодна гора", "Південний вокзал", {'weight': 1}), ("Південний вокзал", "Центральний ринок", {'weight': 2}),
    ("Завод ім. Малишева", "Спортивна", {'weight': 3}),
    ("Спортивна", "Проспект Гагаріна", {'weight': 4}),
    ("Проспект Гагаріна", "Радянська", {'weight': 5}), ("Радянська", "Центральний ринок", {'weight': 6}),
    ("Завод ім. Малишева", "Московський проспект", {'weight': 7}),
    ("Московський проспект", "Маршала Жукова", {'weight': 8}), ("Маршала Жукова", "Радянської Армії", {'weight': 9}),
    ("Радянської Армії", "Імені О. С. Масельського", {'weight': 10}),
    ("Імені О. С. Масельського", "Тракторний завод", {'weight': 11}),
    ("Тракторний завод", "Пролетарська", {'weight': 12}),
    ("Історичний музей", "Університет", {'weight': 13}), ("Університет", "Пушкінська", {'weight': 14}),
    ("Пушкінська", "Київська", {'weight': 15}), ("Київська", "Академіка Барабашова", {'weight': 16}),
    ("Академіка Барабашова", "Академіка Павлова", {'weight': 17}), ("Академіка Павлова", "Студентська", {'weight': 18}),
    ("Студентська", "Героїв праці", {'weight': 19}),
    ("Метробудівників ім. Ващенка", "Площа Повстання", {'weight': 20}),
    ("Площа Повстання", "Архітектора Бекетова", {'weight': 21}),
    ("Архітектора Бекетова", "Держпром", {'weight': 22}), ("Держпром", "Наукова", {'weight': 23}),
    ("Наукова", "Ботанічний сад", {'weight': 24}), ("Ботанічний сад", "23 Серпня", {'weight': 25}),
    ("23 Серпня", "Олексіївська", {'weight': 26}), ("Держпром", "Університет", {'weight': 27}),
    ("Спортивна", "Метробудівників ім. Ващенка", {'weight': 28}), ("Історичний музей", "Радянська", {'weight': 29})]

metro_graph.add_nodes_from(stations)
metro_graph.add_edges_from(edges)

plt.figure(figsize=(14, 10))
nx.draw(metro_graph, with_labels=True, node_size=3000, node_color="skyblue", font_size=8)
plt.title("Граф метро міста Харків")
plt.show()

# Визначимо кількість вершин та ребер
num_nodes = metro_graph.number_of_nodes()
num_edges = metro_graph.number_of_edges()

# Визначимо ступінь кожної вершини
node_degrees = dict(metro_graph.degree())

print("Кількість вершин (станцій):", num_nodes)
print("Кількість ребер (зв'язків між станціями):", num_edges)
print("Ступінь кожної вершини:")
for station, degree in node_degrees.items():
    print(station + ":", degree, end=", ")
print()

# DFS
dfs_tree = nx.dfs_tree(metro_graph, source='Холодна гора')
print("Алгоритм DFS: ", list(dfs_tree.edges()))

# BFS
bfs_tree = nx.bfs_tree(metro_graph, source='Холодна гора')
print("Алгоритм BFS: ", list(bfs_tree.edges()))

# Алгоритм Дейкстри
start_station = "Холодна гора"
shortest_paths = nx.single_source_dijkstra_path_length(metro_graph, start_station, weight='weight')
print("Алгоритм Дейкстри: ", shortest_paths)
